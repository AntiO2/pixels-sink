# engine | kafka | storage
sink.datasource=storage
# Sink Config: retina | csv | proto | none
sink.mode=retina
sink.monitor.report.file=/home/ubuntu/pixels-sink/tmp/update_rocksdb_index.csv
sink.retina.bucket=16
sink.storage.loop=true
# Kafka Config
bootstrap.servers=realtime-kafka-2:29092
group.id=3078
auto.offset.reset=earliest
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#value.deserializer=io.pixelsdb.pixels.writer.deserializer.RowChangeEventAvroDeserializer
value.deserializer=io.pixelsdb.pixels.sink.event.deserializer.RowChangeEventJsonDeserializer
# Topic & Database Config
topic.prefix=postgresql.oltp_server
consumer.capture_database=pixels_bench_sf1x
consumer.include_tables=
sink.csv.path=./data
sink.csv.enable_header=false
## Retina Config
sink.retina.embedded=false
# stub or stream
sink.retina.mode=stream
#writer.retina.mode=stub
sink.remote.host=localhost
sink.remote.port=29422
sink.timeout.ms=5000
sink.flush.interval.ms=2000
sink.flush.batch.size=500
sink.max.retries=3
## writer commit
sink.commit.batch.size=500
sink.commit.batch.worker=32
sink.commit.batch.delay=200
## Proto Config
sink.proto.dir=file:///home/ubuntu/pixels-sink/tmp
sink.proto.data=data
sink.proto.maxRecords=1000000
## Schema Registry
sink.registry.url=http://localhost:8080/apis/registry/v2
# Transaction Config
transaction.topic.suffix=transaction
#transaction.topic.value.deserializer=io.pixelsdb.pixels.writer.deserializer.TransactionAvroMessageDeserializer
transaction.topic.value.deserializer=io.pixelsdb.pixels.sink.event.deserializer.TransactionJsonMessageDeserializer
sink.trans.batch.size=200
## Batch or trans or record
sink.trans.mode=batch
# Sink Metrics
sink.monitor.enable=true
sink.monitor.port=9464
sink.monitor.report.interval=5000
# Interact with other rpc
sink.rpc.enable=true
sink.rpc.mock.delay=20
# debezium
debezium.name=testEngine
debezium.connector.class=io.debezium.connector.postgresql.PostgresConnector
debezium.provide.transaction.metadata=true
debezium.offset.storage=org.apache.kafka.connect.storage.FileOffsetBackingStore
debezium.offset.storage.file.filename=/tmp/offsets.dat
debezium.offset.flush.interval.ms=60000
debezium.schema.history.internal=io.debezium.storage.file.history.FileSchemaHistory
debezium.schema.history.internal.file.filename=/tmp/schemahistory.dat
debezium.database.hostname=realtime-pg-2
debezium.database.port=5432
debezium.database.user=pixels
debezium.database.password=pixels_realtime_crud
debezium.database.dbname=pixels_bench_sf1x
debezium.plugin.name=pgoutput
debezium.database.server.id=1
debezium.schema.include.list=public
debezium.snapshot.mode=never
debezium.key.converter=org.apache.kafka.connect.json.JsonConverter
debezium.value.converter=org.apache.kafka.connect.json.JsonConverter
debezium.topic.prefix=postgresql.oltp_server
debezium.transforms=topicRouting
debezium.transforms.topicRouting.type=org.apache.kafka.connect.transforms.RegexRouter
debezium.transforms.topicRouting.regex=postgresql\\.oltp_server\\.public\\.(.*)
debezium.transforms.topicRouting.replacement=postgresql.oltp_server.pixels_bench_sf1x.$1
